apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: '8080'
    prometheus.io/scrape: 'true'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        tty: {{ .Values.pod.isTtyEnabled }}
        stdin: {{ .Values.pod.isStdinEnabled }}
        env:
          - name: DEBUG
            value: "false"
          - name: MAXPLAYERS
            value: "3"
          - name: PGID
            value: "1000"
          - name: PUID
            value: "1000"
          - name: SKIPUPDATE
            value: "false"
          - name: STEAMBETA
            value: "false"
        ports:
        - containerPort: {{ .Values.service.ports.query.local }}
          name: "query"
          protocol: UDP
        - containerPort: {{ .Values.service.ports.beacon.local }}
          name: "beacon"
          protocol: UDP
        - containerPort: {{ .Values.service.ports.game.local }}
          name: "game"
          protocol: UDP
        resources:
          limits:
            cpu: {{ .Values.pod.resources.cpu.limit }}
            memory: {{ .Values.pod.resources.memory.limit }}
          requests:
            cpu: {{ .Values.pod.resources.cpu.request }}
            memory: {{ .Values.pod.resources.memory.request }}
        volumeMounts:
        - name: satisfactory-data
          mountPath: /config
  volumeClaimTemplates:
  - metadata:
      name: satisfactory-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi